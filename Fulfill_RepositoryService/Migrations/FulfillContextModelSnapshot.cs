// <auto-generated />
using System;
using Fulfill_RepositoryService.EntityService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fulfill_RepositoryService.Migrations
{
    [DbContext(typeof(FulfillContext))]
    partial class FulfillContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Attachment", b =>
                {
                    b.Property<Guid>("AttachmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("TaskId");

                    b.HasKey("AttachmentId");

                    b.HasIndex("TaskId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Label", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<Guid>("LabelId");

                    b.Property<string>("LabelName");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("TaskId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Priority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("PriorityId");

                    b.HasKey("Id");

                    b.ToTable("Priority");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ReminderId");

                    b.Property<string>("ReminderName");

                    b.Property<Guid?>("TaskId");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCompleted");

                    b.Property<string>("Description");

                    b.Property<bool>("HasSubTaks");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsRecurring");

                    b.Property<bool>("IsReplicated");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("PriorityId");

                    b.Property<decimal>("Progress");

                    b.Property<Guid?>("ReplicationSource");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TaskName");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Attachment", b =>
                {
                    b.HasOne("Fulfill_RepositoryService.DomainEntities.Task")
                        .WithMany("Attachments")
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Label", b =>
                {
                    b.HasOne("Fulfill_RepositoryService.DomainEntities.Task")
                        .WithMany("Labels")
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Reminder", b =>
                {
                    b.HasOne("Fulfill_RepositoryService.DomainEntities.Task")
                        .WithMany("Reminders")
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("Fulfill_RepositoryService.DomainEntities.Task", b =>
                {
                    b.HasOne("Fulfill_RepositoryService.DomainEntities.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId");
                });
#pragma warning restore 612, 618
        }
    }
}
